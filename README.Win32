Building on Win 32 platforms
----------------------------
31.7.1999, Sampo Kellomaki <sampo@iki.fi>

This file is heavily based on work by Anton Roeckseisen <anton@genua.de>

Tested config:
	- Net::SSLeay 1.02 w/Anton's patches
	- SSLeay-0.9.0
	- ActiveState perl from 23.12.1998
	- VC++ 5.0

Current release:
	- Anton's patches merged in, but not tested
	- SSLeay-0.9.0 no longer supported, use OpenSSL-0.9.3a

The build procedure does not use any of the GUI stuff, instead it just
uses the command line tools (such as nmake) that come with VC++. This
approach is pretty much in line with OpenSSL and I believe it is in
the long term only maintainable approach. Do not bother to send me
project files for different "Visual" environments (but feel free to
add all the files in a project and use for your own work if you think
it makes your life easier).

Please send any success reports, bug reports and comments to me.

HOW TO DO IT:
=============

1. Install VC++ 5.0 (or other ANSI C compiler?)

2. Install ActivePerl from www.ActiveState.com (latest version)

3. Install OpenSSL-0.9.3a on your system

4. Edit Makefile.PL to reflect the path to your VC++ library files (see
   comment near the end of the file)

5. Do a "perl Makefile.PL"

6. Do "nmake"
   (If you get link-errors about missing PerlCRT.lib, you shold find
    it in the Perl-Distribution and copy it to C++ lib-Directory) 

7. Do "nmake install"

Anton's comments follow...

BIG THIG: 
=========
The main point in getting it to work was to tell SSLeay to use the
socket opened via perl with SSL_set_fd. The socket number needs some
conversion with _get_osfhandle(fd) (See also SSLeay.xs)

The problem is I do not know how to reverse this behaviour... :-( so 
SSL_get_fd does not work!

MINOR THINGS:
=============
* I used some defines in compiling SSLeay 0.9.0b - so I provide my Makefile for
  tracking things down.... (SSLeay/ms/ntdll.mak) - probably you don't need this!


* To make the compiler (VC++ 5.0) work with it I had to change several function
  prototypes not fully defined in the SSLeay - Headerfiles. C++ is much more 
  complaining about C stuff as one might expect.... grrrrrr.... Maybe the SSL-gu
ys
  get this right someday.

* Added some more functions to get more info about certs an introduced a callbac
k
  to set a passphrase via a perl-function

* Added pointers to typemap - file


HOW TO DO IT:
=============
1. Install VC++ 5.0 

2. Install ActivePerl from ActiveState (I got a version from 23.12.1998 but newe
r should
   work too! Binary distribution is ok!)

3. Install SSLeay 0.9.0b on your system - maybe you need my Makefile.... I hope 
not!

4. Use my headerfiles instead of the files provided by SSLeay-0.9.0b !

5. Edit Makefile.pl to reflect the path to your VC++ library files!

6. Do a "perl makefile.pl"

7. Do "nmake"
   (If you get link-errors about missing PerlCRT.lib please tell me! You shold f
ind it in
    the Perl-Distribution and copy it to C++ lib-Directory) 

8. Do "nmake install"

9. Try to find out if things work ..... You might do this in the examples direct
ory:

   (1) ssleay.exe s_server -cert cert.pem -key key.pem -accept 3000 -www
       (Password is "12345")
   (2) perl callback.pl localhost 3000 \usr\local\ssl\certs cert.pem key.pem
       (Password provided by callback!)

   (3) look at callback.pl and smile..... (hope so :-))
======
